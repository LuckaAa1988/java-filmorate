DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genre_films CASCADE;
DROP TABLE IF EXISTS films_likes CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar,
    email varchar unique not null,
    login varchar unique not null,
    birthday date not null
);

CREATE TABLE IF NOT EXISTS friends (
    user_id int,
    friend_id int,
    is_friend boolean,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS mpa (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar UNIQUE
);

CREATE TABLE IF NOT EXISTS genre (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar,
    description varchar,
    duration int ,
    release_date date,
    mpa_id int REFERENCES mpa (id)
);

CREATE TABLE IF NOT EXISTS genre_films (
    film_id int REFERENCES films (id),
    genre_id int REFERENCES genre (id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS films_likes (
    film_id int REFERENCES films (id),
    user_id int REFERENCES users (id),
    PRIMARY KEY (film_id, user_id)
);





